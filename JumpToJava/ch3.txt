1. 정수
  int
  long : 최댓값 초과시 접미사 L
2. 실수
  float : 접미사 F
  double
  제곱 표현 : eN
3. 연산
  public class Sample {
      public static void main(String[] args) {
          int a = 10;
          int b = 5;
          System.out.println(a+b); //덧셈
          System.out.println(a-b); //뺄셈
          System.out.println(a*b); //곱하기
          System.out.println(a/b); //나누기
          System.out.println(a%b); //나머
      }
  }
증감 연산 : ++, --
4. bool : 참, 거짓
5. 문자
  char a1 = 'a';  // 문자로 표현, 작은 따옴표로 감싸기
  char a2 = 97;  // 아스키코드로 표현
  char a3 = '\u0061';  // 유니코드로 표현
-> 원시 자료형. new 키워드 사용 불가. 값을 직접 표현해야함.
6. 문자열
  String a = "Happy Java";  // 쌍따옴표로 감싸기
  String a = new String("Happy Java");
  내장 메서드
    equals : 두개가 같은지 비교
    == : 자료형이 같은 객체인지 판별
    indexOf : 특정 문자열이 시작되는 위치
    contains : 특정 문자열 포함되어 있는지
    charAt : 특정 위치의 문자
    replaceAll : 특정 문자열 변경
    substring : 특정 문자열 추출
    toUpperCase : 문자열 대문자
    split : 문자열을 문자로 쪼갬
  포맷 메서드
    System.out.println(String.format("I eat %d apples.", 3));  // "I eat 3 apples." 출력
      %s	문자열(String)
      %c	문자 1개(character)
      %d	정수(Integer)
      %f	부동소수(floating-point)
      %o	8진수
      %x	16진수
      %%	Literal % (문자 % 자체)
7. StringBuffer
    append : 뒤에 추가
      sb.append("jump to java");
    insert : 특정위치에 추가
      sb.insert(0, "hello ");
    substring : 특정 부분 추출
8. 배열
    String[] weeks = new String[7];
9. ArrayList
  add : 뒤에 추가
  get : 추출
  size : 요소 개수 출력
  contains : 해당 항목이 있는지 판단(bool 값)
  remove : (객체) 삭제 후 bool / (인덱스) 삭제 후 항목
10. map
  키와 값을 한 쌍으로 가지는 자료형
  put : 키, 값 추가
    map.put("baseball", "야구");
  get : 값 얻을때 사용
    System.out.println(map.get("people")); // "사람" 출력
  containsKey : 키 있는지 판단 bool
  remove : 항목 삭제 후 값 출력
  size : 맵 요소의 개수
  keySet : 키 출력
11. 집합자료형
  add : 값 추가
  addAll : 값 여러개 추가
  remove : 특정 값 제거
12. 상수 집합 enum
